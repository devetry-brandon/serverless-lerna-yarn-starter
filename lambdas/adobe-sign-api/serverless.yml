service: adobe-sign-api

plugins:
  - serverless-bundle

provider:
  name: aws
  runtime: nodejs12.x
  environment:
    REGION: ${opt:region, 'us-east-1'}
    STAGE: ${opt:stage, 'dev'}

functions:
  getAgreement:
    role: lambdaRole
    handler: lib/agreements-controller.getAgreement
    vpc:
      securityGroupIds:
        - { 'Fn::ImportValue': 'AdobeSign-ServerlessSecurityGroup-GroupId' }
      subnetIds:
        - { 'Fn::ImportValue': 'AdobeSign-PrivateSubnetA-Ref' }
    events:
      - http:
          path: agreements/{id}
          method: get
          request:
            parameters:
              paths:
                id: true

resources:
  Resources:
    lambdaRole:
      Type: AWS::IAM::Role
      Properties:
        RoleName: AdobeSignApiLambdaRole
        AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - lambda.amazonaws.com
              Action: sts:AssumeRole
        ManagedPolicyArns:
          - arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
        Policies:
          - PolicyName: myPolicyName
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
                - Effect: Allow
                  Action:
                    - logs:CreateLogGroup
                    - logs:CreateLogStream
                    - logs:PutLogEvents
                  Resource:
                    - "Fn::Join":
                        - ":"
                        - - "arn:aws:logs"
                          - Ref: "AWS::Region"
                          - Ref: "AWS::AccountId"
                          - "log-group:/aws/lambda/*:*:*"
                - Effect: "Allow"
                  Action:
                    - "s3:PutObject"
                  Resource:
                    Fn::Join:
                      - ""
                      - - "arn:aws:s3:::"
                        - "Ref": "ServerlessDeploymentBucket"
                - Effect: "Allow"
                  Resource: "*"
                  Action:
                    - "secretsmanager:GetResourcePolicy"
                    - "secretsmanager:GetSecretValue"
                    - "secretsmanager:DescribeSecret"
                    - "secretsmanager:ListSecretVersionIds"
                    - "secretsmanager:ListSecrets"