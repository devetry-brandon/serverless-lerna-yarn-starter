service: adobe-sign-cache-resources

provider:
  name: aws

resources:
  Resources:
    VPC:
      Type: AWS::EC2::VPC
      Properties:
        CidrBlock: "10.0.0.0/16"
    IP:
      Type: AWS::EC2::EIP
      Properties:
        Domain: vpc
    InternetGateway:
      Type: AWS::EC2::InternetGateway
    VPCGatewayAttachment:
      Type: AWS::EC2::VPCGatewayAttachment
      Properties:
        VpcId:
          Ref: VPC
        InternetGatewayId:
          Ref: InternetGateway
    NatGateway:
      Type: AWS::EC2::NatGateway
      Properties:
        AllocationId:
          Fn::GetAtt:
            - IP
            - AllocationId
        SubnetId:
          Ref: PublicSubnetA
    PrivateSubnetA:
      DependsOn: VPC
      Type: AWS::EC2::Subnet
      Properties:
        VpcId:
          Ref: VPC
        AvailabilityZone: ${self:provider.region}a
        CidrBlock: "10.0.1.0/24"
    PublicSubnetA:
      DependsOn: VPC
      Type: AWS::EC2::Subnet
      Properties:
        VpcId:
          Ref: VPC
        AvailabilityZone: ${self:provider.region}a
        CidrBlock: "10.0.2.0/24"
    PrivateRouteTable:
      Type: AWS::EC2::RouteTable
      Properties:
        VpcId:
          Ref: VPC
    PrivateRoute:
      Type: AWS::EC2::Route
      Properties:
        RouteTableId:
          Ref: PrivateRouteTable
        DestinationCidrBlock: 0.0.0.0/0
        NatGatewayId:
          Ref: NatGateway
    PublicRouteTable:
      Type: AWS::EC2::RouteTable
      Properties:
        VpcId:
          Ref: VPC
    PublicRoute:
      Type: AWS::EC2::Route
      Properties:
        RouteTableId:
          Ref: PublicRouteTable
        DestinationCidrBlock: 0.0.0.0/0
        GatewayId:
          Ref: InternetGateway
    SubnetRouteTableAssociationLambdaPrivateA:
      Type: AWS::EC2::SubnetRouteTableAssociation
      Properties:
        SubnetId:
          Ref: PrivateSubnetA
        RouteTableId:
          Ref: PrivateRouteTable
    SubnetRouteTableAssociationLambdaPublicA:
      Type: AWS::EC2::SubnetRouteTableAssociation
      Properties:
        SubnetId:
          Ref: PublicSubnetA
        RouteTableId:
          Ref: PublicRouteTable
    ServerlessSecurityGroup:
      DependsOn: VPC
      Type: AWS::EC2::SecurityGroup
      Properties:
        GroupDescription: SecurityGroup for Serverless Functions
        VpcId:
          Ref: VPC
    ServerlessStorageSecurityGroup:
      DependsOn: VPC
      Type: AWS::EC2::SecurityGroup
      Properties:
        GroupDescription: Ingress for Redis Cluster
        VpcId:
          Ref: VPC
        SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 6379
          ToPort: 6379
          SourceSecurityGroupId:
            Ref: ServerlessSecurityGroup
    RDSSecurityGroup:
      DependsOn: VPC
      Type: AWS::EC2::SecurityGroup
      Properties:
        GroupDescription: Ingress for RDS
        VpcId:
          Ref: VPC
        SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          SourceSecurityGroupId:
            Ref: ServerlessSecurityGroup
    ServerlessCacheSubnetGroup:
      Type: AWS::ElastiCache::SubnetGroup
      Properties:
        Description: "Cache Subnet Group"
        SubnetIds:
        - Ref: PrivateSubnetA
  Outputs:
    ServerlessStorageSecurityGroup:
      Description: "GroupId of the ServerlessStorageSecurityGroup for redis"
      Value:
        Fn::GetAtt:
          - ServerlessStorageSecurityGroup
          - GroupId
      Export:
        Name: AdobeSign-ServerlessStorageSecurityGroup-GroupId
    ServerlessCacheSubnetGroup:
      Description: "Ref of the ServerlessCacheSubnetGroup for redis"
      Value:
        Ref: ServerlessCacheSubnetGroup
      Export:
        Name: AdobeSign-ServerlessCacheSubnetGroup-Ref
    ServerlessSecurityGroup:
      Description: "GroupId of the ServerlessSecurityGroup used by redis and lambdas accessing redis"
      Value:
        Fn::GetAtt:
          - ServerlessSecurityGroup
          - GroupId
      Export:
        Name: AdobeSign-ServerlessSecurityGroup-GroupId
    PrivateSubnetA:
      Description: "Ref of the PrivateSubnetA used by redis and lambdas accessing redis"
      Value:
        Ref: PrivateSubnetA
      Export:
        Name: AdobeSign-PrivateSubnetA-Ref
    RDSSecurityGroup:
      Description: "GroupId of the RDSSecurityGroup"
      Value:
        Fn::GetAtt:
          - RDSSecurityGroup
          - GroupId
      Export:
        Name: AdobeSign-RDSSecurityGroup-GroupId
  